{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","propType","PropTypes","func","isRequired","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifts","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAQ,OAAIP,GAAJ,mBAAmBO,OACzCN,EAAc,MAMlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,aAyB/BZ,EAAYe,SAAS,CACjBd,cAAee,IAAUC,KAAKC,Y,mCChCrBC,EAAO,uCAAG,WAAOT,GAAP,uBAAAU,EAAA,6DACbC,EADa,iDACmCC,UAAUZ,GAD7C,+DAEAa,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCAJO,EAAU,SAAC,GAAkB,IAAhB5B,EAAe,EAAfA,SAEtB,ECHyB,SAACA,GAE1B,MAA0BR,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBF,OAlBEC,qBAAU,WAENvB,EAAQT,GAEPiC,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAId,WAMNC,EDtB4BM,CAAcpC,GAAlCsB,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAGrB,OACI,qCACI,6BAAM7B,IAEH6B,GAAW,0CAEd,qBAAKJ,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OAEV,cAAC,EAAD,eAESA,GADCA,EAAIC,aEavBiB,EA/BM,WAEjB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAQA,OACI,qCACI,+CAEA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ+C,EAAWpB,KAAI,SAAAlB,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAWA,GADHA,Y,MClBpCuC,IAASC,OACN,cAAC,EAAD,IACDC,SAASC,eAAe,W","file":"static/js/main.c4862e7a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport  PropTypes  from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n   \r\n    const handleInputValue = (e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 0 ){\r\n            setCategories(category=> [inputValue, ...category]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    } \r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputValue }\r\n            />\r\n        </form>\r\n    )\r\n} \r\n\r\n\r\nAddCategory.propType={\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async( category  )=>{\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category ) }&limit=10&api_key=B4ZrJ05dxJwgXXY6VUXOwEB8MWao0Cvs`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map(img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","//import React, { useEffect, useState } from 'react';\r\nimport React from 'react';\r\nimport { useFetchGifts } from '../hooks/useFetchGifts';\r\n//import { getGif } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifts(category);\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            \r\n            {  loading && <p> Loading </p> }\r\n           \r\n            <div className=\"card-grid\">\r\n            \r\n                {\r\n                    images.map(img=> (\r\n                    \r\n                        <GifGridItem \r\n                            key={ img.id} \r\n                            {... img } \r\n                        />\r\n\r\n                    ))\r\n                    \r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifts = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n\r\n        .then(imgs => {\r\n            setTimeout(() => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n\r\n                });\r\n                \r\n            }, 3000);\r\n\r\n        }\r\n        \r\n    ) \r\n })\r\n  return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = ()=> {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    /*const handleAdd = ()=>{\r\n\r\n        setCategories([...categories,'Las Tortugas Ninjas'] );\r\n\r\n    }*/\r\n\r\n    return (\r\n        <>\r\n            <h2> GifExpertApp</h2>\r\n\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category=> (\r\n                        <GifGrid \r\n                            key = { category }\r\n                            category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n// import CounterApp from './components/CounterApp';\nimport './index.css';\n\n\n\nReactDOM.render( /*<CounterApp value={10} />, document.querySelector('#root')*/\n   <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}